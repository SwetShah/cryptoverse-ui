{"ast":null,"code":"var _jsxFileName = \"/Users/swetshah/Desktop/Chainalysis-UI/chanalysis-ui/src/components/Main/Main.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from '@syncfusion/ej2-buttons';\nimport { useState } from 'react';\nimport { coins as coinOptions } from '../../api/coins';\nimport { currency as currencyOptions } from '../../api/currency';\nimport { exchange as exchangeOptions } from '../../api/exchange';\nimport MultiSelect from '../MultiSelect/MultiSelect';\nimport './Main.css';\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\nimport api from '../../api/api';\nimport PricesTable from '../PricesTable/PricesTable';\nimport RecommendationsTable from '../RecommendationsTable/RecommendationsTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [coins, setCoins] = useState([]);\n  const [exchanges, setExchanges] = useState([]);\n  const [currencies, setCurrencies] = useState([]);\n  const [priceRows, setPriceRows] = useState([]);\n  const [recommendationRows, setRecommendationRows] = useState([]);\n\n  const onOptionChange = (type, values) => {\n    if (type === 'coins') {\n      setCoins(values);\n    } else if (type === 'exchange') {\n      setExchanges(values);\n    } else if (type === 'currency') {\n      setCurrencies(values);\n    }\n  };\n\n  const getPrices = () => {\n    console.log(coins, exchanges, currencies);\n    api.post('/price', {\n      coins,\n      exchanges,\n      currencies\n    }).then(response => {\n      const {\n        data\n      } = response; // console.log(data);\n\n      const keys = Object.keys(data);\n      const result = keys.reduce((acc, key, index) => {\n        const item = data[key];\n        const values = Object.values(item.coinMap);\n\n        if (Array.isArray(values) && values.length) {\n          const newCoinMap = values.map(cm => {\n            return {\n              key,\n              ...cm\n            };\n          });\n          acc.push(...newCoinMap);\n        }\n\n        return acc;\n      }, []); // console.log(result)\n\n      setPriceRows(result);\n    });\n  };\n\n  const getRecommendations = () => {\n    console.log(coins, exchanges, currencies);\n    api.post('/recommendations', {\n      coins,\n      exchanges,\n      currencies\n    }).then(response => {\n      const {\n        data\n      } = response; // console.log(data);\n\n      const rows = data.map(item => {\n        const row = {\n          'coinName': item.coin.name,\n          'coinSymbol': item.coin.symbol,\n          'exchange': item.exchange.name,\n          'activity': item.activity,\n          'link': item.exchange.link,\n          'price': ''\n        };\n\n        if (item.activity === 'Buy') {\n          row.price = item.coin.buyPrice;\n        } else if (item.activity === 'Sell') {\n          row.price = item.coin.sellPrice;\n        }\n\n        return row;\n      });\n      console.log(rows);\n      setRecommendationRows(rows);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main\",\n    children: [\"UI\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(MultiSelect, {\n        type: \"coins\",\n        options: coinOptions,\n        onChange: values => onOptionChange('coins', values)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MultiSelect, {\n        type: \"exchange\",\n        options: exchangeOptions,\n        onChange: values => onOptionChange('exchange', values)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MultiSelect, {\n        type: \"currency\",\n        options: currencyOptions,\n        onChange: values => onOptionChange('currency', values)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(ButtonComponent, {\n        className: \"button\",\n        onClick: getPrices,\n        children: \"Get Prices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonComponent, {\n        className: \"button\",\n        onClick: getRecommendations,\n        children: \"Get Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(PricesTable, {\n        rows: priceRows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RecommendationsTable, {\n        rows: recommendationRows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wqPZygZzq3XZYFpZUxy45vxUc2I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/swetshah/Desktop/Chainalysis-UI/chanalysis-ui/src/components/Main/Main.js"],"names":["Button","useState","coins","coinOptions","currency","currencyOptions","exchange","exchangeOptions","MultiSelect","ButtonComponent","api","PricesTable","RecommendationsTable","App","setCoins","exchanges","setExchanges","currencies","setCurrencies","priceRows","setPriceRows","recommendationRows","setRecommendationRows","onOptionChange","type","values","getPrices","console","log","post","then","response","data","keys","Object","result","reduce","acc","key","index","item","coinMap","Array","isArray","length","newCoinMap","map","cm","push","getRecommendations","rows","row","coin","name","symbol","activity","link","price","buyPrice","sellPrice"],"mappings":"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","sourcesContent":["import { Button } from '@syncfusion/ej2-buttons';\nimport { useState } from 'react';\nimport { coins as coinOptions } from '../../api/coins';\nimport { currency as currencyOptions } from '../../api/currency';\nimport { exchange as exchangeOptions } from '../../api/exchange';\nimport MultiSelect from '../MultiSelect/MultiSelect';\nimport './Main.css';\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\nimport api from '../../api/api';\nimport PricesTable from '../PricesTable/PricesTable';\nimport RecommendationsTable from '../RecommendationsTable/RecommendationsTable';\n\nfunction App() {\n  const [coins, setCoins] = useState([]);\n  const [exchanges, setExchanges] = useState([]);\n  const [currencies, setCurrencies] = useState([]);\n  const [priceRows, setPriceRows] = useState([]);\n  const [recommendationRows, setRecommendationRows] = useState([]);\n\n  const onOptionChange = (type, values) => {\n    if (type === 'coins') {\n      setCoins(values);\n    } else if (type === 'exchange') {\n      setExchanges(values);\n    } else if (type === 'currency') {\n      setCurrencies(values);\n    }\n  }\n\n  const getPrices = () => {\n    console.log(coins, exchanges, currencies);\n    api.post('/price', {\n      coins,\n      exchanges,\n      currencies\n    }).then(response => {\n      const { data } = response;\n      // console.log(data);\n      const keys = Object.keys(data);\n      const result = keys.reduce((acc, key, index) => {\n        const item = data[key];\n        const values = Object.values(item.coinMap);\n        if (Array.isArray(values) && values.length) {\n          const newCoinMap = values.map(cm => {\n            return {\n              key,\n              ...cm\n            }\n          })\n          acc.push(...newCoinMap);\n        }\n        return acc;\n      }, []);\n      // console.log(result)\n      setPriceRows(result);\n    });\n  }\n\n\n  const getRecommendations = () => {\n    console.log(coins, exchanges, currencies);\n    api.post('/recommendations', {\n      coins,\n      exchanges,\n      currencies\n    }).then(response => {\n      const { data } = response;\n      // console.log(data);\n      const rows = data.map(item => {\n        const row = {\n          'coinName': item.coin.name,\n          'coinSymbol': item.coin.symbol,\n          'exchange': item.exchange.name,\n          'activity': item.activity,\n          'link': item.exchange.link,\n          'price': ''\n        }\n        if (item.activity === 'Buy') {\n          row.price = item.coin.buyPrice\n        } else if (item.activity === 'Sell') {\n          row.price = item.coin.sellPrice;\n        }\n        return row\n      });\n      console.log(rows);\n      setRecommendationRows(rows);\n    });\n  }\n  return (\n    <div className=\"Main\">\n      UI\n      <div className=\"row\">\n        <MultiSelect type=\"coins\" options={coinOptions} onChange={(values) => onOptionChange('coins', values)}></MultiSelect>\n        <MultiSelect type=\"exchange\" options={exchangeOptions} onChange={(values) => onOptionChange('exchange', values)}></MultiSelect>\n        <MultiSelect type=\"currency\" options={currencyOptions} onChange={(values) => onOptionChange('currency', values)}></MultiSelect>\n      </div>\n      <div className=\"buttons\">\n        <ButtonComponent className=\"button\" onClick={getPrices}>Get Prices</ButtonComponent>\n        <ButtonComponent className=\"button\" onClick={getRecommendations}>Get Recommendations</ButtonComponent>\n      </div>\n      <div className=\"table\">\n        <PricesTable rows={priceRows}>\n        </PricesTable>\n        <div className=\"spacer\">\n\n        </div>\n        <RecommendationsTable rows={recommendationRows}>\n        </RecommendationsTable>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}